// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prelevements_par_caisse.Data;

#nullable disable

namespace Prelevements_par_caisse.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250822153531_AddedDescriptionToDemandeItem")]
    partial class AddedDescriptionToDemandeItem
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prelevements_par_caisse.Models.Categorie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.Demande", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategorieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateDemande")
                        .HasColumnType("datetime2");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.Property<Guid>("UtilisateurId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.HasIndex("UtilisateurId");

                    b.ToTable("Demandes");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.DemandeItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DemandeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("PrixUnitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DemandeId");

                    b.HasIndex("ItemId");

                    b.ToTable("DemandeItems");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategorieId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.Paiement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ComptePaiement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePaiement")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DemandeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EffectuePar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MontantEnLettres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MontantTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DemandeId")
                        .IsUnique();

                    b.ToTable("Paiements");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_Faveur")
                        .HasColumnType("bit");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.Demande", b =>
                {
                    b.HasOne("Prelevements_par_caisse.Models.Categorie", "Categorie")
                        .WithMany("Demandes")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prelevements_par_caisse.Models.User", "Utilisateur")
                        .WithMany("Demandes")
                        .HasForeignKey("UtilisateurId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");

                    b.Navigation("Utilisateur");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.DemandeItem", b =>
                {
                    b.HasOne("Prelevements_par_caisse.Models.Demande", "Demande")
                        .WithMany("DemandeItems")
                        .HasForeignKey("DemandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Prelevements_par_caisse.Models.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Demande");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.Item", b =>
                {
                    b.HasOne("Prelevements_par_caisse.Models.Categorie", "Categorie")
                        .WithMany("Items")
                        .HasForeignKey("CategorieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categorie");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.Paiement", b =>
                {
                    b.HasOne("Prelevements_par_caisse.Models.Demande", "Demande")
                        .WithOne("Paiement")
                        .HasForeignKey("Prelevements_par_caisse.Models.Paiement", "DemandeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Demande");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.Categorie", b =>
                {
                    b.Navigation("Demandes");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.Demande", b =>
                {
                    b.Navigation("DemandeItems");

                    b.Navigation("Paiement")
                        .IsRequired();
                });

            modelBuilder.Entity("Prelevements_par_caisse.Models.User", b =>
                {
                    b.Navigation("Demandes");
                });
#pragma warning restore 612, 618
        }
    }
}
